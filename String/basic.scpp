#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <sstream>
#include <iomanip>
#include <algorithm>
using namespace std;

// Define Employee structure
struct Employee {
    string name;
    float basic, hra, da, pf, gross, net;
};

// Function to print salary details
void printSummary(const vector<Employee>& employees) {
    cout << left << setw(12) << "Name"
         << setw(10) << "Basic"
         << setw(10) << "HRA"
         << setw(10) << "DA"
         << setw(10) << "PF"
         << setw(10) << "Gross"
         << setw(10) << "Net" << endl;
    cout << string(72, '-') << endl;

    for (const auto& e : employees) {
        cout << left << setw(12) << e.name
             << setw(10) << e.basic
             << setw(10) << e.hra
             << setw(10) << e.da
             << setw(10) << e.pf
             << setw(10) << e.gross
             << setw(10) << e.net << endl;
    }
}

// Function to read employees from file and calculate salary
vector<Employee> readEmployeesFromFile(const string& filename) {
    vector<Employee> employees;
    ifstream file(filename);
    string line;

    getline(file, line); // Skip header

    while (getline(file, line)) {
        stringstream ss(line);
        string name, basicStr;
        getline(ss, name, ',');
        getline(ss, basicStr, ',');

        Employee emp;
        emp.name = name;
        emp.basic = stof(basicStr);
        emp.hra = 0.2f * emp.basic;
        emp.da = 0.1f * emp.basic;
        emp.pf = 0.05f * emp.basic;
        emp.gross = emp.basic + emp.hra + emp.da;
        emp.net = emp.gross - emp.pf;

        employees.push_back(emp);
    }

    return employees;
}

// Function to print min and max salary holders
void printMinMax(const vector<Employee>& employees) {
    auto minIt = min_element(employees.begin(), employees.end(), [](const Employee& a, const Employee& b) {
        return a.net < b.net;
    });
    auto maxIt = max_element(employees.begin(), employees.end(), [](const Employee& a, const Employee& b) {
        return a.net < b.net;
    });

    cout << "\nEmployee with Minimum Net Salary: " << minIt->name << " (" << minIt->net << ")\n";
    cout << "Employee with Maximum Net Salary: " << maxIt->name << " (" << maxIt->net << ")\n";
}

int main() {
    string filename = "employees.csv";

    // Step 1: Read Employees
    vector<Employee> employees = readEmployeesFromFile(filename);

    // Step 2: Print Table Summary
    printSummary(employees);

    // Step 3: Print Min/Max Salary Info
    printMinMax(employees);

    return 0;
}
